import acm.program.*;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import acm.util.*;


public class Histogram extends ConsoleProgram {
	public void run() {
		initHistogram();
		readScoresIntoHistogram();
		printHistogram(); 
	}
	
	/*
	 * Initialize int array based on 11 ranges for Midterm scores from 0 to 100
	 */
	private void initHistogram() {
		histogramArray = new int[11];
		for (int i = 0; i < histogramArray.length; i++) {
			histogramArray[i] = 0;
		}
	}
	
	/*
	 * Opens the file and reads score on each line, then converts score to range
	 * and increments element in array that corresponds to the range of the score.
	 */
	private void readScoresIntoHistogram() {
		try {
			BufferedReader rd = new BufferedReader(new FileReader("MidtermScores.txt"));
			while (true) {
				String line = rd.readLine(); //String of integer read from line in file
				if (line == null) break; 
				int score = Integer.parseInt(line); // Convert string number to int
				int range = score / 10; // Convert score into grade range
				histogramArray[range]++; // Increment element for the scores range
			}
			rd.close();
		} catch (IOException ex) {
			throw new ErrorException(ex);
		}
	}
	
	/*
	 * Prints histogram using number of array indices to create labels for each grade range
	 * and then converts the int stored in array index into a representation in asterisks
	 */
	private void printHistogram() {
		for (int range = 0; range <= 10; range++) {
			String label = "";
			switch(range) {
			case 0: label = "00 - 09: "; break;
			case 10: label = "    100: "; break;
			default: label = (range * 10) + " - " + (range * 10 + 9) + ": ";
			}
			println(label + getStars(histogramArray[range]));
		}
		
	}
	
	/*
	 * Converts int in array index to a representation in asterisks
	 */
	private String getStars(int range) {
		String stars = "";
		for (int i = 0; i < range; i++) {
			stars += "*";
		}
		return stars;
	}
	
	private int[] histogramArray; // To hold scores read from text file
}
